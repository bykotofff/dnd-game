#!/bin/bash

# D&D AI Game Server - –°–∫—Ä–∏–ø—Ç –±—ã—Å—Ç—Ä–æ–≥–æ –∑–∞–ø—É—Å–∫–∞
# –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä—É–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∏ –∑–∞–ø—É—Å–∫–∞ backend

set -e  # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∏ –ª—é–±–æ–π –æ—à–∏–±–∫–µ

echo "================================================"
echo "D&D AI Game Server - Quick Start"
echo "================================================"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π
check_requirements() {
    echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π..."

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker
    if ! command -v docker &> /dev/null; then
        echo "‚ùå Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
        exit 1
    fi

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker Compose
    if ! command -v docker-compose &> /dev/null; then
        echo "‚ùå Docker Compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker Compose –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
        exit 1
    fi

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Python 3.11
    if ! command -v python3.11 &> /dev/null; then
        echo "‚ö†Ô∏è  Python 3.11 –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü—ã—Ç–∞—é—Å—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å python3..."
        if ! command -v python3 &> /dev/null; then
            echo "‚ùå Python 3 –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Python 3.11+ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
            exit 1
        fi
        PYTHON_CMD="python3"
    else
        PYTHON_CMD="python3.11"
    fi

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –º–µ—Å—Ç–∞ (–º–∏–Ω–∏–º—É–º 10GB)
    FREE_SPACE=$(df . | tail -1 | awk '{print $4}')
    if [ $FREE_SPACE -lt 10485760 ]; then  # 10GB –≤ KB
        echo "‚ö†Ô∏è  –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: –°–≤–æ–±–æ–¥–Ω–æ–≥–æ –º–µ—Å—Ç–∞ –º–µ–Ω—å—à–µ 10GB. –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –æ—Å–≤–æ–±–æ–¥–∏—Ç—å –º–µ—Å—Ç–æ."
    fi

    echo "‚úÖ –°–∏—Å—Ç–µ–º–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã"
}

# –°–æ–∑–¥–∞–Ω–∏–µ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ .env —Ñ–∞–π–ª–∞
setup_env() {
    echo "‚öôÔ∏è  –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."

    if [ ! -f .env ]; then
        echo "üìù –°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞..."

        # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω—ã—Ö –∫–ª—é—á–µ–π
        SECRET_KEY=$(python3 -c "import secrets; print(secrets.token_urlsafe(32))")
        ENCRYPTION_KEY=$(python3 -c "import secrets; print(secrets.token_urlsafe(24))")

        cat > .env << EOF
# –û–±—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
DEBUG=True
HOST=0.0.0.0
PORT=8000

# –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö PostgreSQL
DB_HOST=localhost
DB_PORT=5432
DB_NAME=dnd_game
DB_USER=dnd_user
DB_PASSWORD=dnd_password

# Redis
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_DB=0
REDIS_PASSWORD=

# Ollama
OLLAMA_HOST=localhost
OLLAMA_PORT=11434
OLLAMA_MODEL=llama3.1:8b

# Stable Diffusion
SD_HOST=localhost
SD_PORT=7860

# –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å (—Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏)
SECRET_KEY=$SECRET_KEY
ENCRYPTION_KEY=$ENCRYPTION_KEY

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
LOG_LEVEL=INFO
EOF
        echo "‚úÖ .env —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –∫–ª—é—á–∞–º–∏"
    else
        echo "‚úÖ .env —Ñ–∞–π–ª —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
    fi
}

# –°–æ–∑–¥–∞–Ω–∏–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
setup_python() {
    echo "üêç –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Python –æ–∫—Ä—É–∂–µ–Ω–∏—è..."

    if [ ! -d "venv" ]; then
        echo "üì¶ –°–æ–∑–¥–∞–Ω–∏–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
        $PYTHON_CMD -m venv venv
    fi

    echo "üì• –ê–∫—Ç–∏–≤–∞—Ü–∏—è –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
    source venv/bin/activate
    pip install --upgrade pip
    pip install -r requirements.txt

    echo "‚úÖ Python –æ–∫—Ä—É–∂–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ"
}

# –ó–∞–ø—É—Å–∫ Docker —Å–µ—Ä–≤–∏—Å–æ–≤
start_docker_services() {
    echo "üê≥ –ó–∞–ø—É—Å–∫ Docker —Å–µ—Ä–≤–∏—Å–æ–≤..."

    # –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ Docker –∑–∞–ø—É—â–µ–Ω
    if ! docker info &> /dev/null; then
        echo "‚ùå Docker daemon –Ω–µ –∑–∞–ø—É—â–µ–Ω. –ó–∞–ø—É—Å—Ç–∏—Ç–µ Docker –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
        exit 1
    fi

    echo "üöÄ –ó–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
    docker-compose up -d

    echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–æ–≤..."
    sleep 10

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
    echo "üìä –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:"
    docker-compose ps

    echo "‚úÖ Docker —Å–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã"
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Ollama
setup_ollama() {
    echo "ü§ñ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Ollama (–ò–ò)..."

    echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ Ollama..."
    sleep 20

    echo "üì• –ó–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥–µ–ª–∏ –ò–ò (—ç—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç)..."
    docker exec dnd_ollama ollama pull llama3.1:8b

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π
    echo "üìã –ó–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ –º–æ–¥–µ–ª–∏:"
    docker exec dnd_ollama ollama list

    echo "‚úÖ Ollama –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–æ–≤
check_services() {
    echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–æ–≤..."

    # PostgreSQL
    echo -n "üóÑÔ∏è  PostgreSQL: "
    if docker exec dnd_postgres pg_isready -U dnd_user -q; then
        echo "‚úÖ –ì–æ—Ç–æ–≤"
    else
        echo "‚ùå –ù–µ –≥–æ—Ç–æ–≤"
    fi

    # Redis
    echo -n "üìä Redis: "
    if docker exec dnd_redis redis-cli ping &> /dev/null; then
        echo "‚úÖ –ì–æ—Ç–æ–≤"
    else
        echo "‚ùå –ù–µ –≥–æ—Ç–æ–≤"
    fi

    # Ollama
    echo -n "ü§ñ Ollama: "
    if curl -f http://localhost:11434/api/tags &> /dev/null; then
        echo "‚úÖ –ì–æ—Ç–æ–≤"
    else
        echo "‚ùå –ù–µ –≥–æ—Ç–æ–≤"
    fi

    # Stable Diffusion
    echo -n "üé® Stable Diffusion: "
    if curl -f http://localhost:7860/health &> /dev/null; then
        echo "‚úÖ –ì–æ—Ç–æ–≤"
    else
        echo "‚ö†Ô∏è  –ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è... (–º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –≤—Ä–µ–º—è)"
    fi
}

# –ó–∞–ø—É—Å–∫ backend —Å–µ—Ä–≤–µ—Ä–∞
start_backend() {
    echo "üöÄ –ó–∞–ø—É—Å–∫ backend —Å–µ—Ä–≤–µ—Ä–∞..."

    source venv/bin/activate

    echo "üî• –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –Ω–∞ http://localhost:8000"
    echo "üìö API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: http://localhost:8000/docs"
    echo "üåê Swagger UI: http://localhost:8000/redoc"
    echo ""
    echo "–î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C"
    echo ""

    python run.py
}

# –§—É–Ω–∫—Ü–∏—è –æ—á–∏—Å—Ç–∫–∏ –ø—Ä–∏ –æ—à–∏–±–∫–µ
cleanup_on_error() {
    echo ""
    echo "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ"
    echo "üßπ –ü–æ–ø—ã—Ç–∫–∞ –æ—á–∏—Å—Ç–∫–∏..."

    docker-compose down
    echo "üìû –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–º–æ—â–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ SETUP.md"
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –æ—à–∏–±–æ–∫
trap cleanup_on_error ERR

# –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    echo "üéØ –ù–∞—á–∏–Ω–∞—é –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é —É—Å—Ç–∞–Ω–æ–≤–∫—É –∏ –∑–∞–ø—É—Å–∫..."
    echo ""

    check_requirements
    setup_env
    setup_python
    start_docker_services
    setup_ollama
    check_services

    echo ""
    echo "================================================"
    echo "‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!"
    echo "================================================"
    echo ""

    # –ó–∞–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
    read -p "üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç—å backend —Å–µ—Ä–≤–µ—Ä —Å–µ–π—á–∞—Å? (y/N): " -n 1 -r
    echo
    if [[ $REPLY =~ ^[Yy]$ ]]; then
        start_backend
    else
        echo "üí° –î–ª—è –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:"
        echo "   source venv/bin/activate"
        echo "   python run.py"
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
case "${1:-}" in
    --help|-h)
        echo "D&D AI Game Server - –°–∫—Ä–∏–ø—Ç –±—ã—Å—Ç—Ä–æ–≥–æ –∑–∞–ø—É—Å–∫–∞"
        echo ""
        echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:"
        echo "  $0                 - –ü–æ–ª–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ –∑–∞–ø—É—Å–∫"
        echo "  $0 --services-only - –¢–æ–ª—å–∫–æ –∑–∞–ø—É—Å–∫ Docker —Å–µ—Ä–≤–∏—Å–æ–≤"
        echo "  $0 --backend-only  - –¢–æ–ª—å–∫–æ –∑–∞–ø—É—Å–∫ backend (—Å–µ—Ä–≤–∏—Å—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∑–∞–ø—É—â–µ–Ω—ã)"
        echo "  $0 --stop          - –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤"
        echo "  $0 --help          - –≠—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞"
        exit 0
        ;;
    --services-only)
        echo "üê≥ –ó–∞–ø—É—Å–∫ —Ç–æ–ª—å–∫–æ Docker —Å–µ—Ä–≤–∏—Å–æ–≤..."
        check_requirements
        start_docker_services
        setup_ollama
        check_services
        echo "‚úÖ –°–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã"
        ;;
    --backend-only)
        echo "üöÄ –ó–∞–ø—É—Å–∫ —Ç–æ–ª—å–∫–æ backend —Å–µ—Ä–≤–µ—Ä–∞..."
        if [ ! -f .env ]; then
            echo "‚ùå .env —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –ø–æ–ª–Ω—É—é —É—Å—Ç–∞–Ω–æ–≤–∫—É."
            exit 1
        fi
        if [ ! -d venv ]; then
            setup_python
        fi
        start_backend
        ;;
    --stop)
        echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤..."
        docker-compose down
        echo "‚úÖ –°–µ—Ä–≤–∏—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
        ;;
    "")
        main
        ;;
    *)
        echo "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç: $1"
        echo "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ --help –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏"
        exit 1
        ;;
esac