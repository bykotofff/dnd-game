// utils/authDebug.ts - –ü–æ–º–æ—â–Ω–∏–∫ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –ø—Ä–æ–±–ª–µ–º —Å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–µ–π

export interface AuthDebugInfo {
    hasAuthTokens: boolean;
    hasLegacyToken: boolean;
    hasAuthStore: boolean;
    authTokensData: any;
    authStoreData: any;
    currentUser: any;
    recommendations: string[];
}

export function debugAuthState(): AuthDebugInfo {
    const info: AuthDebugInfo = {
        hasAuthTokens: false,
        hasLegacyToken: false,
        hasAuthStore: false,
        authTokensData: null,
        authStoreData: null,
        currentUser: null,
        recommendations: [],
    };

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º auth_tokens (–æ—Å–Ω–æ–≤–Ω–æ–π —Å–ø–æ—Å–æ–± —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–æ–≤)
    try {
        const authTokensString = localStorage.getItem('auth_tokens');
        if (authTokensString) {
            info.hasAuthTokens = true;
            info.authTokensData = JSON.parse(authTokensString);

            if (!info.authTokensData.access_token) {
                info.recommendations.push('auth_tokens –Ω–∞–π–¥–µ–Ω, –Ω–æ access_token –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç');
            } else if (info.authTokensData.access_token.length < 10) {
                info.recommendations.push('access_token —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π, –≤–æ–∑–º–æ–∂–Ω–æ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω');
            }
        } else {
            info.recommendations.push('–û—Å–Ω–æ–≤–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ —Ç–æ–∫–µ–Ω–æ–≤ (auth_tokens) –Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
        }
    } catch (error) {
        info.recommendations.push('–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ auth_tokens: ' + error);
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º legacy auth_token
    try {
        const authToken = localStorage.getItem('auth_token');
        if (authToken) {
            info.hasLegacyToken = true;
            info.recommendations.push('–ù–∞–π–¥–µ–Ω —É—Å—Ç–∞—Ä–µ–≤—à–∏–π auth_token, —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø–µ—Ä–µ–ª–æ–≥–∏–Ω–∏—Ç—å—Å—è');
        }
    } catch (error) {
        info.recommendations.push('–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ legacy auth_token: ' + error);
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º Zustand auth store
    try {
        const authStoreString = localStorage.getItem('auth-store');
        if (authStoreString) {
            info.hasAuthStore = true;
            info.authStoreData = JSON.parse(authStoreString);

            if (info.authStoreData.state?.user) {
                info.currentUser = info.authStoreData.state.user;

                if (!info.authStoreData.state.isAuthenticated) {
                    info.recommendations.push('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω –≤ store, –Ω–æ isAuthenticated = false');
                }
            } else {
                info.recommendations.push('auth-store –Ω–∞–π–¥–µ–Ω, –Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç');
            }
        } else {
            info.recommendations.push('Zustand auth store –Ω–µ –Ω–∞–π–¥–µ–Ω');
        }
    } catch (error) {
        info.recommendations.push('–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ auth-store: ' + error);
    }

    // –û–±—â–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    if (!info.hasAuthTokens && !info.hasLegacyToken) {
        info.recommendations.push('–¢–æ–∫–µ–Ω—ã –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É.');
    }

    if (info.hasAuthTokens && !info.hasAuthStore) {
        info.recommendations.push('–¢–æ–∫–µ–Ω—ã –µ—Å—Ç—å, –Ω–æ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ω–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–æ');
    }

    if (!info.hasAuthTokens && info.hasAuthStore) {
        info.recommendations.push('–°–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é, –Ω–æ —Ç–æ–∫–µ–Ω—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç');
    }

    return info;
}

export function printAuthDebug(): void {
    const info = debugAuthState();

    console.group('üîê Auth Debug Information');
    console.log('Has auth_tokens:', info.hasAuthTokens);
    console.log('Has legacy auth_token:', info.hasLegacyToken);
    console.log('Has auth store:', info.hasAuthStore);

    if (info.authTokensData) {
        console.log('Auth tokens data:', info.authTokensData);
    }

    if (info.currentUser) {
        console.log('Current user:', info.currentUser);
    }

    if (info.recommendations.length > 0) {
        console.group('üìã Recommendations:');
        info.recommendations.forEach((rec, index) => {
            console.log(`${index + 1}. ${rec}`);
        });
        console.groupEnd();
    }

    console.groupEnd();
}

export function fixAuthState(): boolean {
    console.log('üîß Attempting to fix auth state...');

    const info = debugAuthState();

    // –ï—Å–ª–∏ –µ—Å—Ç—å —Ç–æ–∫–µ–Ω—ã, –Ω–æ –Ω–µ—Ç auth store - –ø—ã—Ç–∞–µ–º—Å—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å
    if (info.hasAuthTokens && !info.hasAuthStore && info.authTokensData?.access_token) {
        try {
            // –°–æ–∑–¥–∞–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É auth store
            const authStoreData = {
                state: {
                    user: {
                        id: 'unknown',
                        username: 'unknown',
                        email: 'unknown',
                    },
                    isAuthenticated: true,
                },
                version: 0,
            };

            localStorage.setItem('auth-store', JSON.stringify(authStoreData));
            console.log('‚úÖ Auth store –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
            return true;
        } catch (error) {
            console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å auth store:', error);
        }
    }

    // –ï—Å–ª–∏ –µ—Å—Ç—å legacy —Ç–æ–∫–µ–Ω, –ø–µ—Ä–µ–Ω–æ—Å–∏–º –µ–≥–æ
    if (info.hasLegacyToken && !info.hasAuthTokens) {
        try {
            const legacyToken = localStorage.getItem('auth_token');
            if (legacyToken) {
                const authTokens = {
                    access_token: legacyToken,
                    refresh_token: '',
                    token_type: 'bearer',
                };
                localStorage.setItem('auth_tokens', JSON.stringify(authTokens));
                console.log('‚úÖ Legacy —Ç–æ–∫–µ–Ω –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω –≤ –Ω–æ–≤—ã–π —Ñ–æ—Ä–º–∞—Ç');
                return true;
            }
        } catch (error) {
            console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–Ω–µ—Å—Ç–∏ legacy —Ç–æ–∫–µ–Ω:', error);
        }
    }

    console.log('‚ùì –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ. –¢—Ä–µ–±—É–µ—Ç—Å—è –ø–æ–≤—Ç–æ—Ä–Ω—ã–π –≤—Ö–æ–¥.');
    return false;
}

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º —Å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–µ–π
export function AuthDebugComponent(): JSX.Element {
    const info = debugAuthState();

    return (
        <div className="bg-yellow-50 border border-yellow-200 rounded-lg p-4 mb-4">
        <h3 className="text-lg font-semibold text-yellow-800 mb-2">
                üîê –ü—Ä–æ–±–ª–µ–º—ã —Å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–µ–π
    </h3>

    <div className="space-y-2 text-sm">
    <div className="grid grid-cols-3 gap-4">
    <div className={`flex items-center ${info.hasAuthTokens ? 'text-green-600' : 'text-red-600'}`}>
    <span className="mr-2">{info.hasAuthTokens ? '‚úÖ' : '‚ùå'}</span>
    –¢–æ–∫–µ–Ω—ã
    </div>
    <div className={`flex items-center ${info.hasAuthStore ? 'text-green-600' : 'text-red-600'}`}>
    <span className="mr-2">{info.hasAuthStore ? '‚úÖ' : '‚ùå'}</span>
    –°–æ—Å—Ç–æ—è–Ω–∏–µ
    </div>
    <div className={`flex items-center ${info.currentUser ? 'text-green-600' : 'text-red-600'}`}>
    <span className="mr-2">{info.currentUser ? '‚úÖ' : '‚ùå'}</span>
    –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    </div>
    </div>

    {info.recommendations.length > 0 && (
        <div className="mt-3">
        <h4 className="font-medium text-yellow-800">–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:</h4>
    <ul className="list-disc list-inside space-y-1 text-yellow-700">
        {info.recommendations.map((rec, index) => (
                <li key={index}>{rec}</li>
            ))}
        </ul>
        </div>
    )}

    <div className="mt-3 flex gap-2">
    <button
        onClick={printAuthDebug}
    className="px-3 py-1 bg-blue-500 text-white text-xs rounded hover:bg-blue-600"
        >
        –ü–æ–∫–∞–∑–∞—Ç—å –¥–µ—Ç–∞–ª–∏ –≤ –∫–æ–Ω—Å–æ–ª–∏
    </button>
    <button
    onClick={fixAuthState}
    className="px-3 py-1 bg-green-500 text-white text-xs rounded hover:bg-green-600"
        >
        –ü–æ–ø—ã—Ç–∞—Ç—å—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å
    </button>
    <button
    onClick={() => {
        localStorage.clear();
        window.location.href = '/login';
    }}
    className="px-3 py-1 bg-red-500 text-white text-xs rounded hover:bg-red-600"
        >
        –û—á–∏—Å—Ç–∏—Ç—å –∏ –ø–µ—Ä–µ–ª–æ–≥–∏–Ω–∏—Ç—å—Å—è
    </button>
    </div>
    </div>
    </div>
);
}