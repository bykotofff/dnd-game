import React, { useState } from 'react';
import { useNavigate } from 'react-router-dom';
import { useForm } from 'react-hook-form';
import { useMutation } from 'react-query';
import { toast } from 'react-hot-toast';
import { motion, AnimatePresence } from 'framer-motion';
import {
    ArrowLeftIcon,
    ArrowRightIcon,
    CheckIcon,
    SparklesIcon,
    GlobeAltIcon,
    UsersIcon,
    CogIcon,
    BookOpenIcon,
    UserGroupIcon,
    LockClosedIcon,
} from '@heroicons/react/24/outline';

import { Button } from '@/components/ui/Button';
import { Input } from '@/components/ui/Input';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/Card';
import { campaignService } from '@/services/campaignService';
import type { CreateCampaignData } from '@/services/campaignService';

interface FormData extends CreateCampaignData {}

const CAMPAIGN_SETTINGS = [
    { id: 'fantasy', name: '–§—ç–Ω—Ç–µ–∑–∏', description: '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–æ–µ —Å—Ä–µ–¥–Ω–µ–≤–µ–∫–æ–≤–æ–µ —Ñ—ç–Ω—Ç–µ–∑–∏ —Å –º–∞–≥–∏–µ–π –∏ –¥—Ä–∞–∫–æ–Ω–∞–º–∏' },
    { id: 'modern', name: '–°–æ–≤—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç—å', description: '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –º–∏—Ä —Å —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ –º–∏—Å—Ç–∏–∫–∏' },
    { id: 'sci-fi', name: '–ù–∞—É—á–Ω–∞—è —Ñ–∞–Ω—Ç–∞—Å—Ç–∏–∫–∞', description: '–ö–æ—Å–º–∏—á–µ—Å–∫–∏–µ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è –∏ –≤—ã—Å–æ–∫–∏–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏' },
    { id: 'cyberpunk', name: '–ö–∏–±–µ—Ä–ø–∞–Ω–∫', description: '–ú—Ä–∞—á–Ω–æ–µ –±—É–¥—É—â–µ–µ —Å –∫–æ—Ä–ø–æ—Ä–∞—Ü–∏—è–º–∏ –∏ —Ö–∞–∫–µ—Ä–∞–º–∏' },
    { id: 'steampunk', name: '–°—Ç–∏–º–ø–∞–Ω–∫', description: '–í–∏–∫—Ç–æ—Ä–∏–∞–Ω—Å–∫–∞—è —ç–ø–æ—Ö–∞ —Å –ø–∞—Ä–æ–≤—ã–º–∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è–º–∏' },
    { id: 'horror', name: '–•–æ—Ä—Ä–æ—Ä', description: '–ú–∏—Å—Ç–∏–∫–∞, —É–∂–∞—Å—ã –∏ —Å–≤–µ—Ä—Ö—ä–µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ' },
    { id: 'custom', name: '–°–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π', description: '–°–æ–∑–¥–∞–π—Ç–µ —Å–≤–æ–π —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –º–∏—Ä' },
];

const AI_STYLES = [
    {
        id: 'balanced',
        name: '–°–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π',
        description: '–ò–¥–µ–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å –º–µ–∂–¥—É —Å–µ—Ä—å–µ–∑–Ω–æ—Å—Ç—å—é –∏ —é–º–æ—Ä–æ–º',
        icon: '‚öñÔ∏è'
    },
    {
        id: 'serious',
        name: '–°–µ—Ä—å–µ–∑–Ω—ã–π',
        description: '–§–æ–∫—É—Å –Ω–∞ –¥—Ä–∞–º–µ –∏ —ç–ø–∏—á–µ—Å–∫–∏—Ö –º–æ–º–µ–Ω—Ç–∞—Ö',
        icon: 'üé≠'
    },
    {
        id: 'humorous',
        name: '–Æ–º–æ—Ä–∏—Å—Ç–∏—á–µ—Å–∫–∏–π',
        description: '–õ–µ–≥–∫–∞—è –∞—Ç–º–æ—Å—Ñ–µ—Ä–∞ —Å —à—É—Ç–∫–∞–º–∏ –∏ –∑–∞–±–∞–≤–Ω—ã–º–∏ —Å–∏—Ç—É–∞—Ü–∏—è–º–∏',
        icon: 'üòÑ'
    },
    {
        id: 'dramatic',
        name: '–î—Ä–∞–º–∞—Ç–∏—á–µ—Å–∫–∏–π',
        description: '–ì–ª—É–±–æ–∫–∏–µ —ç–º–æ—Ü–∏–∏ –∏ —Å–ª–æ–∂–Ω—ã–µ –º–æ—Ä–∞–ª—å–Ω—ã–µ –¥–∏–ª–µ–º–º—ã',
        icon: 'üé¨'
    },
];

const CreateCampaignPage: React.FC = () => {
    const navigate = useNavigate();
    const [currentStep, setCurrentStep] = useState(1);
    const [selectedSetting, setSelectedSetting] = useState('');
    const [selectedAiStyle, setSelectedAiStyle] = useState('balanced');

    const {
        register,
        handleSubmit,
        watch,
        setValue,
        formState: { errors },
    } = useForm<FormData>({
        defaultValues: {
            max_players: 4,
            starting_level: 1,
            ai_style: 'balanced',
            is_public: false,
            requires_approval: true,
        },
    });

    const createMutation = useMutation(
        (data: CreateCampaignData) => campaignService.createCampaign(data),
        {
            onSuccess: (campaign) => {
                toast.success('–ö–∞–º–ø–∞–Ω–∏—è —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!');
                navigate(`/campaigns/${campaign.id}`);
            },
            onError: (error: any) => {
                toast.error(error.response?.data?.detail || '–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–∞–º–ø–∞–Ω–∏–∏');
            },
        }
    );

    const onSubmit = (data: FormData) => {
        const campaignData: CreateCampaignData = {
            ...data,
            setting: selectedSetting,
            ai_style: selectedAiStyle,
        };
        createMutation.mutate(campaignData);
    };

    const nextStep = () => {
        if (currentStep < 4) {
            setCurrentStep(currentStep + 1);
        }
    };

    const prevStep = () => {
        if (currentStep > 1) {
            setCurrentStep(currentStep - 1);
        }
    };

    const steps = [
        { id: 1, name: '–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', icon: BookOpenIcon },
        { id: 2, name: '–°–µ—Ç—Ç–∏–Ω–≥ –∏ –º–∏—Ä', icon: GlobeAltIcon },
        { id: 3, name: '–ò–ò –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏', icon: SparklesIcon },
        { id: 4, name: '–ò–≥—Ä–æ–∫–∏ –∏ –¥–æ—Å—Ç—É–ø', icon: UserGroupIcon },
    ];

    const currentStepData = steps.find(step => step.id === currentStep);

    return (
        <div className="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
            {/* Header */}
            <div className="mb-8">
                <button
                    onClick={() => navigate('/campaigns')}
                    className="flex items-center text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-white mb-4"
                >
                    <ArrowLeftIcon className="w-4 h-4 mr-2" />
                    –ù–∞–∑–∞–¥ –∫ –∫–∞–º–ø–∞–Ω–∏—è–º
                </button>
                <h1 className="text-3xl font-bold text-gray-900 dark:text-white">
                    –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –∫–∞–º–ø–∞–Ω–∏–∏
                </h1>
                <p className="text-gray-600 dark:text-gray-400 mt-2">
                    –°–æ–∑–¥–∞–π—Ç–µ —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –º–∏—Ä –¥–ª—è —Å–≤–æ–∏—Ö –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–π
                </p>
            </div>

            {/* Progress Steps */}
            <div className="mb-8">
                <div className="flex items-center justify-between">
                    {steps.map((step, index) => (
                        <React.Fragment key={step.id}>
                            <div className="flex flex-col items-center">
                                <div className={`flex items-center justify-center w-10 h-10 rounded-full border-2 ${
                                    currentStep >= step.id
                                        ? 'bg-amber-600 border-amber-600 text-white'
                                        : 'border-gray-300 text-gray-400 dark:border-gray-600 dark:text-gray-500'
                                }`}>
                                    {currentStep > step.id ? (
                                        <CheckIcon className="w-5 h-5" />
                                    ) : (
                                        <step.icon className="w-5 h-5" />
                                    )}
                                </div>
                                <span className={`mt-2 text-sm font-medium ${
                                    currentStep >= step.id
                                        ? 'text-amber-600 dark:text-amber-400'
                                        : 'text-gray-500 dark:text-gray-400'
                                }`}>
                                    {step.name}
                                </span>
                            </div>
                            {index < steps.length - 1 && (
                                <div className={`flex-1 h-0.5 mx-4 ${
                                    currentStep > step.id
                                        ? 'bg-amber-600'
                                        : 'bg-gray-300 dark:bg-gray-600'
                                }`} />
                            )}
                        </React.Fragment>
                    ))}
                </div>
            </div>

            {/* Form */}
            <form onSubmit={handleSubmit(onSubmit)}>
                <Card>
                    <CardHeader>
                        <CardTitle className="flex items-center gap-2">
                            {currentStepData?.icon && <currentStepData.icon className="w-5 h-5" />}
                            {currentStepData?.name}
                        </CardTitle>
                    </CardHeader>
                    <CardContent>
                        <AnimatePresence mode="wait">
                            <motion.div
                                key={currentStep}
                                initial={{ opacity: 0, x: 20 }}
                                animate={{ opacity: 1, x: 0 }}
                                exit={{ opacity: 0, x: -20 }}
                                transition={{ duration: 0.3 }}
                            >
                                {/* Step 1: Basic Information */}
                                {currentStep === 1 && (
                                    <div className="space-y-6">
                                        <div>
                                            <label className="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
                                                –ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞–º–ø–∞–Ω–∏–∏ *
                                            </label>
                                            <Input
                                                {...register('name', { required: '–ù–∞–∑–≤–∞–Ω–∏–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ' })}
                                                placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –ü—Ä–æ–∫–ª—è—Ç—å–µ –°—Ç—Ä–∞—Ç–æ–ª—å–º–∞"
                                                error={errors.name?.message}
                                            />
                                        </div>

                                        <div>
                                            <label className="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
                                                –û–ø–∏—Å–∞–Ω–∏–µ
                                            </label>
                                            <textarea
                                                {...register('description')}
                                                rows={4}
                                                className="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm focus:outline-none focus:ring-amber-500 focus:border-amber-500 dark:bg-gray-700 dark:text-white"
                                                placeholder="–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –≤–∞—à–µ–π –∫–∞–º–ø–∞–Ω–∏–∏..."
                                            />
                                        </div>

                                        <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                                            <div>
                                                <label className="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
                                                    –ú–∞–∫—Å–∏–º—É–º –∏–≥—Ä–æ–∫–æ–≤
                                                </label>
                                                <Input
                                                    {...register('max_players', {
                                                        required: true,
                                                        min: 1,
                                                        max: 8
                                                    })}
                                                    type="number"
                                                    min="1"
                                                    max="8"
                                                />
                                            </div>

                                            <div>
                                                <label className="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
                                                    –°—Ç–∞—Ä—Ç–æ–≤—ã–π —É—Ä–æ–≤–µ–Ω—å
                                                </label>
                                                <Input
                                                    {...register('starting_level', {
                                                        required: true,
                                                        min: 1,
                                                        max: 20
                                                    })}
                                                    type="number"
                                                    min="1"
                                                    max="20"
                                                />
                                            </div>
                                        </div>
                                    </div>
                                )}

                                {/* Step 2: Setting and World */}
                                {currentStep === 2 && (
                                    <div className="space-y-6">
                                        <div>
                                            <label className="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-4">
                                                –í—ã–±–µ—Ä–∏—Ç–µ —Å–µ—Ç—Ç–∏–Ω–≥
                                            </label>
                                            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                                                {CAMPAIGN_SETTINGS.map((setting) => (
                                                    <div
                                                        key={setting.id}
                                                        onClick={() => setSelectedSetting(setting.id)}
                                                        className={`p-4 border-2 rounded-lg cursor-pointer transition-colors ${
                                                            selectedSetting === setting.id
                                                                ? 'border-amber-500 bg-amber-50 dark:bg-amber-900/20'
                                                                : 'border-gray-200 dark:border-gray-600 hover:border-gray-300 dark:hover:border-gray-500'
                                                        }`}
                                                    >
                                                        <h4 className="font-medium text-gray-900 dark:text-white">
                                                            {setting.name}
                                                        </h4>
                                                        <p className="text-sm text-gray-600 dark:text-gray-400 mt-1">
                                                            {setting.description}
                                                        </p>
                                                    </div>
                                                ))}
                                            </div>
                                        </div>

                                        <div>
                                            <label className="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
                                                –û–ø–∏—Å–∞–Ω–∏–µ –º–∏—Ä–∞
                                            </label>
                                            <textarea
                                                {...register('world_description')}
                                                rows={4}
                                                className="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm focus:outline-none focus:ring-amber-500 focus:border-amber-500 dark:bg-gray-700 dark:text-white"
                                                placeholder="–û–ø–∏—à–∏—Ç–µ –º–∏—Ä –≤–∞—à–µ–π –∫–∞–º–ø–∞–Ω–∏–∏..."
                                            />
                                        </div>

                                        <div>
                                            <label className="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
                                                –û—Å–Ω–æ–≤–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—è
                                            </label>
                                            <textarea
                                                {...register('main_story')}
                                                rows={4}
                                                className="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm focus:outline-none focus:ring-amber-500 focus:border-amber-500 dark:bg-gray-700 dark:text-white"
                                                placeholder="–û—Å–Ω–æ–≤–Ω–∞—è —Å—é–∂–µ—Ç–Ω–∞—è –ª–∏–Ω–∏—è..."
                                            />
                                        </div>
                                    </div>
                                )}

                                {/* Step 3: AI and Settings */}
                                {currentStep === 3 && (
                                    <div className="space-y-6">
                                        <div>
                                            <label className="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-4">
                                                –°—Ç–∏–ª—å –ò–ò-–º–∞—Å—Ç–µ—Ä–∞
                                            </label>
                                            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                                                {AI_STYLES.map((style) => (
                                                    <div
                                                        key={style.id}
                                                        onClick={() => setSelectedAiStyle(style.id)}
                                                        className={`p-4 border-2 rounded-lg cursor-pointer transition-colors ${
                                                            selectedAiStyle === style.id
                                                                ? 'border-amber-500 bg-amber-50 dark:bg-amber-900/20'
                                                                : 'border-gray-200 dark:border-gray-600 hover:border-gray-300 dark:hover:border-gray-500'
                                                        }`}
                                                    >
                                                        <div className="flex items-center gap-3">
                                                            <span className="text-2xl">{style.icon}</span>
                                                            <div>
                                                                <h4 className="font-medium text-gray-900 dark:text-white">
                                                                    {style.name}
                                                                </h4>
                                                                <p className="text-sm text-gray-600 dark:text-gray-400">
                                                                    {style.description}
                                                                </p>
                                                            </div>
                                                        </div>
                                                    </div>
                                                ))}
                                            </div>
                                        </div>

                                        <div>
                                            <label className="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
                                                –õ–∏—á–Ω–æ—Å—Ç—å –ò–ò-–º–∞—Å—Ç–µ—Ä–∞
                                            </label>
                                            <textarea
                                                {...register('ai_personality')}
                                                rows={3}
                                                className="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm focus:outline-none focus:ring-amber-500 focus:border-amber-500 dark:bg-gray-700 dark:text-white"
                                                placeholder="–û–ø–∏—à–∏—Ç–µ, –∫–∞–∫–∏–º –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤–∞—à –ò–ò-–º–∞—Å—Ç–µ—Ä..."
                                            />
                                        </div>

                                        <div>
                                            <label className="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
                                                –î–æ–º–∞—à–Ω–∏–µ –ø—Ä–∞–≤–∏–ª–∞
                                            </label>
                                            <textarea
                                                {...register('house_rules')}
                                                rows={3}
                                                className="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm focus:outline-none focus:ring-amber-500 focus:border-amber-500 dark:bg-gray-700 dark:text-white"
                                                placeholder="–û—Å–æ–±—ã–µ –ø—Ä–∞–≤–∏–ª–∞ –¥–ª—è –≤–∞—à–µ–π –∫–∞–º–ø–∞–Ω–∏–∏..."
                                            />
                                        </div>
                                    </div>
                                )}

                                {/* Step 4: Players and Access */}
                                {currentStep === 4 && (
                                    <div className="space-y-6">
                                        <div className="space-y-4">
                                            <div className="flex items-center justify-between p-4 border border-gray-200 dark:border-gray-600 rounded-lg">
                                                <div className="flex items-center gap-3">
                                                    <GlobeAltIcon className="w-5 h-5 text-green-500" />
                                                    <div>
                                                        <h4 className="font-medium text-gray-900 dark:text-white">
                                                            –ü—É–±–ª–∏—á–Ω–∞—è –∫–∞–º–ø–∞–Ω–∏—è
                                                        </h4>
                                                        <p className="text-sm text-gray-600 dark:text-gray-400">
                                                            –î—Ä—É–≥–∏–µ –∏–≥—Ä–æ–∫–∏ —Å–º–æ–≥—É—Ç –Ω–∞–π—Ç–∏ –∏ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –∫–∞–º–ø–∞–Ω–∏–∏
                                                        </p>
                                                    </div>
                                                </div>
                                                <input
                                                    {...register('is_public')}
                                                    type="checkbox"
                                                    className="h-4 w-4 text-amber-600 focus:ring-amber-500 border-gray-300 rounded"
                                                />
                                            </div>

                                            <div className="flex items-center justify-between p-4 border border-gray-200 dark:border-gray-600 rounded-lg">
                                                <div className="flex items-center gap-3">
                                                    <LockClosedIcon className="w-5 h-5 text-blue-500" />
                                                    <div>
                                                        <h4 className="font-medium text-gray-900 dark:text-white">
                                                            –¢—Ä–µ–±–æ–≤–∞—Ç—å –æ–¥–æ–±—Ä–µ–Ω–∏–µ
                                                        </h4>
                                                        <p className="text-sm text-gray-600 dark:text-gray-400">
                                                            –ù–æ–≤—ã–µ –∏–≥—Ä–æ–∫–∏ –¥–æ–ª–∂–Ω—ã –ø–æ–ª—É—á–∏—Ç—å –≤–∞—à–µ –æ–¥–æ–±—Ä–µ–Ω–∏–µ
                                                        </p>
                                                    </div>
                                                </div>
                                                <input
                                                    {...register('requires_approval')}
                                                    type="checkbox"
                                                    className="h-4 w-4 text-amber-600 focus:ring-amber-500 border-gray-300 rounded"
                                                />
                                            </div>
                                        </div>

                                        <div className="bg-amber-50 dark:bg-amber-900/20 border border-amber-200 dark:border-amber-800 rounded-lg p-4">
                                            <div className="flex">
                                                <SparklesIcon className="w-5 h-5 text-amber-600 dark:text-amber-400 mt-0.5" />
                                                <div className="ml-3">
                                                    <h4 className="text-sm font-medium text-amber-800 dark:text-amber-200">
                                                        –ì–æ—Ç–æ–≤–æ –∫ —Å–æ–∑–¥–∞–Ω–∏—é!
                                                    </h4>
                                                    <p className="text-sm text-amber-700 dark:text-amber-300 mt-1">
                                                        –ò–ò-–º–∞—Å—Ç–µ—Ä –±—É–¥–µ—Ç –≥–æ—Ç–æ–≤ —É–ø—Ä–∞–≤–ª—è—Ç—å –≤–∞—à–µ–π –∫–∞–º–ø–∞–Ω–∏–µ–π —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è.
                                                    </p>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                )}
                            </motion.div>
                        </AnimatePresence>
                    </CardContent>
                </Card>

                {/* Navigation */}
                <div className="flex justify-between mt-8">
                    <Button
                        type="button"
                        variant="outline"
                        onClick={prevStep}
                        disabled={currentStep === 1}
                        className="flex items-center gap-2"
                    >
                        <ArrowLeftIcon className="w-4 h-4" />
                        –ù–∞–∑–∞–¥
                    </Button>

                    {currentStep < 4 ? (
                        <Button
                            type="button"
                            variant="primary"
                            onClick={nextStep}
                            className="flex items-center gap-2"
                        >
                            –î–∞–ª–µ–µ
                            <ArrowRightIcon className="w-4 h-4" />
                        </Button>
                    ) : (
                        <Button
                            type="submit"
                            variant="primary"
                            disabled={createMutation.isLoading}
                            className="flex items-center gap-2"
                        >
                            {createMutation.isLoading ? (
                                <>
                                    <div className="animate-spin rounded-full h-4 w-4 border-b-2 border-white" />
                                    –°–æ–∑–¥–∞–Ω–∏–µ...
                                </>
                            ) : (
                                <>
                                    <CheckIcon className="w-4 h-4" />
                                    –°–æ–∑–¥–∞—Ç—å –∫–∞–º–ø–∞–Ω–∏—é
                                </>
                            )}
                        </Button>
                    )}
                </div>
            </form>
        </div>
    );
};

export default CreateCampaignPage;